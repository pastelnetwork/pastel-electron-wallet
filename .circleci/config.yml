version: 2.1

orbs:
  aws-cli: circleci/aws-cli@2.0.3
  aws-s3: circleci/aws-s3@3.0.0

executors:
  electron-builder:
    docker:
      - image: electronuserland/builder:14
    working_directory: ~/project
  macos-builder:
    macos:
      xcode: 11.7
    working_directory: ~/project

jobs:
  install-deps:
    executor: electron-builder
    steps:
      - checkout
      - restore_cache:
          keys:
            - node_deps-{{ checksum "yarn.lock" }}
      - run:
          name: install dependencies
          command: yarn --frozen-lockfile
      - save_cache:
          key: node_deps-{{ checksum "yarn.lock" }}
          paths:
            - ~/project/node_modules
      - persist_to_workspace:
          root: ~/project
          paths:
            - .

  lint-and-test:
    executor: electron-builder
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: check code follow standard
          command: yarn check-all
      - run:
          name: tests
          command: yarn test
      - persist_to_workspace:
          root: ~/project
          paths:
            - .

  build-ubuntu:
    executor: electron-builder
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: install dpkg and fakeroot
          command: |
            apt-get update -y
            apt-get install -y dpkg fakeroot
      - run:
          name: build for linux(deb)
          command: yarn make
      - store_artifacts:
          path: ~/project/out/make

  build-windows:
    executor: electron-builder
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: reconfigure wine for x64
          command: rm -rf /root/.wine && winecfg
      - run:
          name: build for windows
          command: yarn make --platform=win32
      - store_artifacts:
          path: ~/project/out/make/squirrel.windows/x64

  build-macos:
    executor: macos-builder
    steps:
      - checkout
      - restore_cache:
          keys:
            - node_deps_mac-{{ checksum "yarn.lock" }}
      - run:
          name: install dependencies
          command: yarn --frozen-lockfile
      - save_cache:
          key: node_deps_mac-{{ checksum "yarn.lock" }}
          paths:
            - ~/project/node_modules
      - run:
          name: build for macos(dmg)
          command: yarn make
      - store_artifacts:
          path: ~/project/out/make

  upload-artifacts:
    executor: electron-builder
    steps:
      - aws-cli/setup:
          aws-region: AWS_REGION
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
      - run:
          name: download artifacts
          command: |
            curl -H "Circle-Token $CIRCLE_TOKEN" \
            https://circleci.com/api/v1.1/project/github/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/latest/artifacts \
            | grep -o 'https://[^"]*' \
            | wget --verbose --header "Circle-Token: $CIRCLE_TOKEN" --input-file -
      - aws-s3/sync:
          from: ~/project
          to: s3://$BUCKET_NAME
          arguments: |
            --acl public-read \
            --cache-control "max-age=86400" \
            --delete

workflows:
  main:
    jobs:
      - install-deps:
          filters: &filters-pr
          tags:
            only: /^v[0-9]+(\.[0-9]+).*/
      - lint-and-test:
          requires:
            - install-deps
          filters:
            <<: *filters-pr

      - build-ubuntu:
          filters: &filters-build
            <<: *filters-pr
            branches:
              ignore: /.*/
          requires:
            - lint-and-test
      - build-windows:
          filters:
            <<: *filters-build
          requires:
            - lint-and-test
      - build-macos:
          filters:
            <<: *filters-build
          requires:
            - lint-and-test

      - upload-artifacts:
          context:
            - fullnodewallet
          filters:
            <<: *filters-build
          requires:
            - build-ubuntu
            - build-windows
            - build-macos
